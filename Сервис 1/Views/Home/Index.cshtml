@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Структура подразделений</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        #sync-message {
            display: none;
            color: green;
            font-weight: bold;
        }
    </style>
</head>
<body>

**Структура подразделений**
<input type="text" id="filter" placeholder="Фильтр по наименованию">
<button id="sync">Синхронизация данных</button>
<p id="sync-message">Синхронизация успешна!</p>
<ul id="departments-list"></ul>
<p id="loading" style="display:none;">Загрузка...</p>

<script>
    $(document).ready(function () {
        let filter = '';

        // Рекурсивная функция для отображения подразделений
        function renderDepartments(departments, parentElement) {
            departments.forEach(department => {
                const name = department.name || 'Без названия';
                const status = department.status || 'Неизвестный статус';
                const parentId = department.parentDepartmentId !== null ? `- ID родителя: ${department.parentDepartmentId}` : '';

                // Создаем элемент для текущего подразделения
                const listItem = $(`<li>${name} - ${status} ${parentId}</li>`);
                parentElement.append(listItem);

                // Если есть дочерние подразделения, вызываем рекурсивно для их отображения
                if (department.children && department.children.length > 0) {
                    const childrenList = $('<ul></ul>');
                    renderDepartments(department.children, childrenList);
                    parentElement.append(childrenList);
                }
            });
        }

        // Функция для получения данных о подразделениях
        function fetchDepartments() {
            $('#loading').show();
            const url = filter
                ? `https://localhost:5001/DepartmentSync?name=${filter}`
                : 'https://localhost:5001/DepartmentSync/all';

            $.get(url)
                .done(function (data) {
                    $('#loading').hide();
                    $('#departments-list').empty();

                    if (!Array.isArray(data) || !data.length) {
                        $('#departments-list').append('<li>Нет данных для отображения</li>');
                        return; // Ничего не отображаем, если данных нет
                    }

                    renderDepartments(data, $('#departments-list'));
                })
                .fail(function (jqXHR) {
                    $('#loading').hide();
                    console.error('Ошибка при получении данных:', jqXHR.statusText);
                    alert('Ошибка при получении данных: ' + jqXHR.statusText);
                });
        }

        // Функция для синхронизации данных
        function syncData() {
            $.post('https://localhost:5001/DepartmentSync/sync')
                .done(function () {
                    fetchDepartments(); // Обновляем данные после синхронизации
                    $('#sync-message').fadeIn().delay(2000).fadeOut(); // Показать сообщение о синхронизации
                })
                .fail(function (jqXHR) {
                    console.error('Ошибка при синхронизации данных:', jqXHR.statusText);
                    alert('Ошибка при синхронизации данных: ' + jqXHR.statusText);
                });
        }

        setInterval(fetchDepartments, 3000); // Обновление статусов каждые 3 секунды

        $('#filter').on('input', function () {
            filter = $(this).val();
            fetchDepartments();
        });

        $('#sync').on('click', function () {
            syncData();
        });

        fetchDepartments(); // Первоначальная загрузка данных
    });
</script>

</body>
</html>



